diff --git a/Compiler.cpp b/Compiler.cpp
index c799341..a51cc6c 100644
--- a/Compiler.cpp
+++ b/Compiler.cpp
@@ -37,31 +37,28 @@ class AST {
   ops<ls_props<std::string>> *parse_parenthesis(std::string &&action_name) {
     ops<ls_props<std::string>> *props = new ops<ls_props<std::string>>();
     props->action_name = action_name;
-    props->action_props.should.emplace();
-    std::vector<std::string> *curr_list = &*props->action_props.should;
+    std::optional<std::vector<std::string>> *curr_list =
+        &props->action_props.should;
     std::optional<Tokens> next_token = this->advance_token();
     while (next_token && (next_token->t_type != TokenType::TT_RP)) {
       switch (next_token->t_type) {
       case TokenType::TT_EX: {
-        if (!props->action_props.must.has_value())
-          props->action_props.must.emplace();
-
-        curr_list = &*props->action_props.must;
+        curr_list = &props->action_props.must;
         break;
       }
       case TokenType::TT_QM: {
-        if (!props->action_props.could.has_value())
-          props->action_props.could.emplace();
-        curr_list = &*props->action_props.could;
+        curr_list = &props->action_props.could;
         break;
       }
       case TokenType::TT_CM: {
-        curr_list = &*props->action_props.should;
+        curr_list = &props->action_props.should;
         break;
       }
       case TokenType::TT_STR:
       case TokenType::TT_ATTR: {
-        curr_list->emplace_back(next_token->t_val);
+        if (!curr_list->has_value())
+          curr_list->emplace();
+        curr_list->value().emplace_back(next_token->t_val);
         break;
       }
       case TokenType::TT_CL: {
@@ -71,15 +68,15 @@ class AST {
           if (new_token.has_value() &&
               (new_token->t_type == TokenType::TT_ATTR ||
                new_token->t_type == TokenType::TT_STR))
-            curr_list->back().append(" as " + new_token->t_val);
+            curr_list->value().back().append(" as " + new_token->t_val);
 
         } else {
           std::cout
               << "key value aliasing is not allows with the given token type :"
               << props->action_name << "\n";
         }
-      	break;
-				}
+        break;
+      }
       default:
         std::cout << "Wrong token at: " << next_token->location << "\n";
         break;
